cat part* | awk -F"," '{print $2}' | sort | uniq > mydict

aspell create --lang=en master ./cams < mydict

aspell dump dicts 
echo "formen" | aspell -a -d en_GB #users a particular dictionary

echo "formen" | aspell -a -d cams -extra-dicts en_GB
extra-dicts

 echo "forme" | aspell -a --ignore-case | sed 1d | awk -F":" '{print $2}' | awk -F"," '{print $1","$2","$3}'| sed 2d


spell()
{
y=`echo $1 | aspell -a -d cams -extra-dicts en_US --ignore-case | sed 1d | awk -F":" '{print $2}' | awk -F"," '{print $1","$2","$3}'| sed 2d`
 echo "$1|$y"
}

aspell create --lang=en master ./mydict < mydictv1

=======================
using speller
=======================
cat part* | awk -F"," '{print $3}' > /home/deepak/Documents/Projects/SpellChecking/app_all.csv
cat app_all.csv | sort | uniq > app_uniq.csv

 echo "deepak<><<1235\!sdf" | sed -e s/[^0-9a-zA-Z]//g

 cat app_uniq.csv | sed -e s/[^a-zA-Z\ ]//g | sort | uniq > app_uniq_1.csv

cat app_uniq_1.csv | sed -e 's/ /\n/g' | sort | uniq > tokens.txt

cat tokens.txt | while read -r line; do spell $line >> output; done

cat output | sed -e 's/| /|/g' | sed -e 's/, /,/g' > output_app.txt

sed -i '/,,/d' output_app.txt

R
====
library(stringdist);
stringdist("deepakbabu","deepak babu",method="dl");
#gives levenstein distance

